package fr.esgi.myappointments.business;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import fr.esgi.myappointments.business.Task;
import fr.esgi.myappointments.business.User;
import fr.esgi.myappointments.business.Company;
import fr.esgi.myappointments.business.Category;
import fr.esgi.myappointments.business.Location;
import fr.esgi.myappointments.business.Address;

import fr.esgi.myappointments.business.TaskDao;
import fr.esgi.myappointments.business.UserDao;
import fr.esgi.myappointments.business.CompanyDao;
import fr.esgi.myappointments.business.CategoryDao;
import fr.esgi.myappointments.business.LocationDao;
import fr.esgi.myappointments.business.AddressDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig taskDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig companyDaoConfig;
    private final DaoConfig categoryDaoConfig;
    private final DaoConfig locationDaoConfig;
    private final DaoConfig addressDaoConfig;

    private final TaskDao taskDao;
    private final UserDao userDao;
    private final CompanyDao companyDao;
    private final CategoryDao categoryDao;
    private final LocationDao locationDao;
    private final AddressDao addressDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        taskDaoConfig = daoConfigMap.get(TaskDao.class).clone();
        taskDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        companyDaoConfig = daoConfigMap.get(CompanyDao.class).clone();
        companyDaoConfig.initIdentityScope(type);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        locationDaoConfig = daoConfigMap.get(LocationDao.class).clone();
        locationDaoConfig.initIdentityScope(type);

        addressDaoConfig = daoConfigMap.get(AddressDao.class).clone();
        addressDaoConfig.initIdentityScope(type);

        taskDao = new TaskDao(taskDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        companyDao = new CompanyDao(companyDaoConfig, this);
        categoryDao = new CategoryDao(categoryDaoConfig, this);
        locationDao = new LocationDao(locationDaoConfig, this);
        addressDao = new AddressDao(addressDaoConfig, this);

        registerDao(Task.class, taskDao);
        registerDao(User.class, userDao);
        registerDao(Company.class, companyDao);
        registerDao(Category.class, categoryDao);
        registerDao(Location.class, locationDao);
        registerDao(Address.class, addressDao);
    }
    
    public void clear() {
        taskDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        companyDaoConfig.getIdentityScope().clear();
        categoryDaoConfig.getIdentityScope().clear();
        locationDaoConfig.getIdentityScope().clear();
        addressDaoConfig.getIdentityScope().clear();
    }

    public TaskDao getTaskDao() {
        return taskDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public CompanyDao getCompanyDao() {
        return companyDao;
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public LocationDao getLocationDao() {
        return locationDao;
    }

    public AddressDao getAddressDao() {
        return addressDao;
    }

}
